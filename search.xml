<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Js-7个简单但棘手的JavaScript面试问题</title>
    <url>/archives/f84c093e.html</url>
    <content><![CDATA[<!-- build time:Thu Apr 23 2020 19:54:12 GMT+0800 (GMT+08:00) --><p>本次主要记录：意外全局变量、数组的length属性、鹰眼测试、自动分号插入、经典为题：棘手的闭包、浮点数计算、变量提升这几个问题。</p><a id="more"></a><h3 id="意外全局变量"><a href="#意外全局变量" class="headerlink" title="意外全局变量"></a>意外全局变量</h3><p><strong>问题</strong></p><p>以下代码段中用于运算 <code>typeof a</code> 和 <code>typeof b</code> 的内容：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> a = b = <span class="number">0</span>;</span><br><span class="line">    a++;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">foo();</span><br><span class="line"><span class="keyword">typeof</span> a;</span><br><span class="line"><span class="keyword">typeof</span> b;</span><br></pre></td></tr></table></figure><details><summary>答案</summary>undefined number<br>这里需要注意的是: <code>let a = b = 0;</code> 和 <code>let a = 0, b = 0;</code> 的区别。<br><ul><li><code>let a = b = 0;</code> 相当于 <code>b = 0;</code> <code>let a = b;</code>。注意, <code>b = 0</code> 的前面是没有 <code>let</code> 声明的,所以这句代码就相当于 <code>window.b = 0;</code>,所以, <code>b</code> 就是一个全局变量。以上代码在浏览器中执行的详情如下：<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">let</span> a;</span><br><span class="line"><span class="built_in">window</span>.b = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">let</span> a = <span class="built_in">window</span>.b;</span><br><span class="line">a++;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><code>let a = 0, b = 0;</code> 相当于 <code>let a = 0; let b = 0;</code>。</li></ul></details><h3 id="数组的length属性"><a href="#数组的length属性" class="headerlink" title="数组的length属性"></a>数组的length属性</h3><p><strong>问题</strong></p><p>以下代码中<code>clothes[0]</code> 的值是什么？</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> clothes = [<span class="string">'jacket'</span>, <span class="string">'t-shirt'</span>];</span><br><span class="line">clothes.length = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">console</span>.log(clothes[<span class="number">0</span>]);</span><br></pre></td></tr></table></figure><details><summary>答案</summary>undefined<br>数组对象的 `length` 属性具有特殊的行为：减少length属性的值就是删除自己的数组元素。<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">clothes.length = <span class="number">0</span>; <span class="comment">// &lt;=&gt; clothes = [];</span></span><br></pre></td></tr></table></figure></details><h3 id="鹰眼测试"><a href="#鹰眼测试" class="headerlink" title="鹰眼测试"></a>鹰眼测试</h3><p><strong>问题</strong></p><p><code>numbers</code> 数组的内容是什么？</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> length = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">const</span> numbers = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; length; i++); &#123;</span><br><span class="line">    numbers.push(i + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(numbers);</span><br></pre></td></tr></table></figure><details><summary>答案</summary>5<br>注意分号的位置！以上代码等效于：<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> length = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">const</span> numbers = [];</span><br><span class="line"><span class="keyword">var</span> i;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">  <span class="comment">// do nothing                    </span></span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">  numbers.push(i + <span class="number">1</span>);                      </span><br><span class="line">&#125;</span><br><span class="line">  <span class="built_in">console</span>.log(numbers);</span><br></pre></td></tr></table></figure></details><h3 id="自动分号插入"><a href="#自动分号插入" class="headerlink" title="自动分号插入"></a>自动分号插入</h3><p><strong>问题</strong></p><p><code>arrayfromValue()</code> 返回什么值？</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">arrayFromValue</span>(<span class="params">item</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line">  [item];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(arrayFromValue[<span class="number">10</span>]);</span><br></pre></td></tr></table></figure><details><summary>答案</summary>undefined<br>注意 <code>return</code> 和 <code>[item]</code> 表达式之间的换行符。此换行符会使JavaScript自动在 <code>return</code> 和 <code>[item]</code> 表达式之间插入分号。以下是等效代码：<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">arrayFromValue</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line">  [item];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h3 id="经典为题：棘手的闭包"><a href="#经典为题：棘手的闭包" class="headerlink" title="经典为题：棘手的闭包"></a>经典为题：棘手的闭包</h3><p><strong>问题</strong></p><p>以下代码将输出什么到控制台？</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">  <span class="keyword">const</span> log = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">  &#125;;</span><br><span class="line">  setTimeout(log, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><details><summary>答案</summary>3 3 3<br><code>log()</code>是一个捕获变量 <code>i</code>的闭包，此变量在 <code>for()</code> 循环的外部范围中定义。执行此代码有两个阶段。<br>Phase 1:<br>1. <code>for()</code> 重复3次，在每次迭代过程中，都会创建一个新的函数 <code>log()</code> 来捕获变量 <code>i</code>。然后， <code>setTimeout()</code> 计划执行 <code>log()</code>。<br>2. 当 <code>for()</code> 循环完成时，<code>i</code> 变量的值为3。<br>Phase 2:<br>1. 第二阶段发生在100ms之后， <code>setTimeout()</code> 调用了3次计划的 <code>log()</code>。<code>log()</code> 读取变量 <code>i</code>的当前值为3，并记录到控制台。</details><!-- rebuild by neat -->]]></content>
      <categories>
        <category>面试</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>面试</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo特色语法</title>
    <url>/archives/517dd702.html</url>
    <content><![CDATA[<!-- build time:Thu Apr 23 2020 11:17:13 GMT+0800 (GMT+08:00) --><p>这是一篇关于hexo一些进阶写法的样式文章。</p><a id="more"></a><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><h4 id="普通-markdown-写法"><a href="#普通-markdown-写法" class="headerlink" title="普通 markdown 写法"></a>普通 markdown 写法</h4><blockquote><p>I’am Devin.</p><p>I like coding.</p></blockquote><h4 id="hexo-写法"><a href="#hexo-写法" class="headerlink" title="hexo 写法"></a>hexo 写法</h4><blockquote><p>I’am Devin. I like coding.</p></blockquote><h4 id="hexo-作者引用"><a href="#hexo-作者引用" class="headerlink" title="hexo 作者引用"></a>hexo 作者引用</h4><blockquote><p>I’am Devin. I like coding.</p><footer><strong>—Devin</strong></footer></blockquote><h3 id="标记"><a href="#标记" class="headerlink" title="标记"></a>标记</h3><div class="note default"><p>default 提示块标签</p></div><div class="note primary"><p>primary 提示块标签</p></div><div class="note success"><p>success 提示块标签</p></div><div class="note info"><p>info 提示块标签</p></div><div class="note warning"><p>warning 提示块标签</p></div><div class="note danger"><p>danger 提示块标签</p></div><h3 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h3><span class="label default">默认</span> <span class="label primary">主要</span> <span class="label success">成功</span> <span class="label info">信息</span> <span class="label warning">警告</span> <span class="label danger">危险</span> <span class="label success">这是成功的信息</span><h3 id="按钮"><a href="#按钮" class="headerlink" title="按钮"></a>按钮</h3><a class="btn" href="https://20202030.cc/" target="_blank" rel="noopener external nofollow noreferrer" title="这是子俊的私人领域"><i class="fa fa-home fa-fw"></i>首页 </a><a class="btn" href="https://20202030.cc/" target="_blank" rel="noopener external nofollow noreferrer" title="豆瓣电影"><i class="fa fa-film fa-fw"></i>观影 </a><a class="btn" href="https://20202030.cc/" target="_blank" rel="noopener external nofollow noreferrer" title="豆瓣读书"><i class="fa fa-book fa-fw"></i>阅读</a><!-- rebuild by neat -->]]></content>
      <categories>
        <category>文档</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo踩坑</title>
    <url>/archives/cf2347bd.html</url>
    <content><![CDATA[<!-- build time:Thu Apr 23 2020 12:23:40 GMT+0800 (GMT+08:00) --><p>主要记录hexo使用过程中的一些Bug，Hexo的踩坑之路。</p><a id="more"></a><h3 id="本地预览ok，部署有问题"><a href="#本地预览ok，部署有问题" class="headerlink" title="本地预览ok，部署有问题"></a>本地预览ok，部署有问题</h3><ul><li><p>Bug描述：</p><p>部署生产，标签文章打开出现 404，但是，本地预览 无此问题。</p></li></ul><ul><li><p>Bug解决：</p><p>出现的问题的原因是：git中设置了大小写不敏感。所以，可以修改 git 设置不忽略大小写。进入项目文件夹，进入 <code>git</code> 目录：<code>.deploy_git</code> , 修改 <code>.git</code> 文件中的配置文件 <code>config</code> , 修改 <code>ignorecase</code> 属性：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ignorecase = <span class="literal">false</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="404页面错误"><a href="#404页面错误" class="headerlink" title="404页面错误"></a>404页面错误</h3><ul><li><p>Bug描述：</p><p>生产环境，404显示不正确，渲染成了post页面，而不是需要的页面。</p></li><li><p>Bug解决：</p><p>在 <code>source</code> 目录下新建 <code>404.html</code> 文件，写入以下代码：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>404<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"content-type"</span> <span class="attr">content</span>=<span class="string">"text/html;charset=utf-8;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge,chrome=1"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"robots"</span> <span class="attr">content</span>=<span class="string">"all"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"robots"</span> <span class="attr">content</span>=<span class="string">"index,follow"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> <span class="attr">homePageUrl</span>=<span class="string">"/"</span> <span class="attr">homePageName</span>=<span class="string">"返回"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在主题配置文件中修改 <code>menu</code> 属性：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line"><span class="attr">commonweal:</span> <span class="string">/404</span> <span class="string">||</span> <span class="string">heartbeat</span></span><br></pre></td></tr></table></figure></li></ul><!-- rebuild by neat -->]]></content>
      <categories>
        <category>文档</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>踩坑</tag>
      </tags>
  </entry>
</search>
